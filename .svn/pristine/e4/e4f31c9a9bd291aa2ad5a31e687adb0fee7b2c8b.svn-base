package com.jd.project.module.admin.message.controller;

import com.github.pagehelper.PageHelper;
import com.jd.common.constant.Constants;
import com.jd.framework.aspectj.lang.annotation.Log;
import com.jd.framework.aspectj.lang.enums.BusinessType;
import com.jd.framework.web.controller.BaseController;
import com.jd.framework.web.domain.Result;
import com.jd.framework.web.page.TableDataInfo;
import com.jd.project.module.admin.message.entity.NoticeEntity;
import com.jd.project.module.admin.message.service.NoticeService;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.*;
import java.util.List;

/**
 * 消息 信息操作处理
 * 
 * @author zaq
 * @date 2018-11-26
 */
@Controller
@RequestMapping("/module/notice")
public class NoticeController extends BaseController{
    private String prefix = "module/admin/message";
	
	@Autowired
	private NoticeService msgService;
	
	@RequiresPermissions("module:notice:view")
	@GetMapping()
	public String initList() {
	    return prefix + "/notice_list";
	}
	
	/**
	 * 查询消息列表
	 */
	@RequiresPermissions("module:notice:list")
	@PostMapping("/query")
	@ResponseBody
	public TableDataInfo query(NoticeEntity msg) {
		startPage();
        List<NoticeEntity> list = msgService.selectMsgList(msg);
		return getDataTable(list);
	}
	
	/**
	 * 新增消息
	 */
	@GetMapping("/initAdd")
	public String initAdd(ModelMap mmap) {
	    mmap.put("msg",new NoticeEntity());
	    return prefix + "/notice_edit";
	}
	
	/**
	 * 新增保存消息
	 */
	@RequiresPermissions("module:notice:add")
	@Log(title = "消息", businessType = BusinessType.INSERT)
	@PostMapping("/add")
	@ResponseBody
	public Result add(NoticeEntity msg) {
		return toAjax(msgService.insertMsg(msg));
	}

	/**
	 * 修改消息
	 */
	@GetMapping("/initEdit/{id}")
	public String initEdit(@PathVariable("id") Long id, ModelMap mmap) {
		NoticeEntity msg = msgService.selectMsgById(id);
		mmap.put("msg", msg);
	    return prefix + "/notice_edit";
	}
	
	/**
	 * 修改保存消息
	 */
	@RequiresPermissions("module:notice:edit")
	@Log(title = "消息", businessType = BusinessType.UPDATE)
	@PostMapping("/edit")
	@ResponseBody
	public Result edit(NoticeEntity msg) {
		return toAjax(msgService.updateMsg(msg));
	}
	
	/**
	 * 删除消息
	 */
	@RequiresPermissions("module:notice:remove")
	@Log(title = "消息", businessType = BusinessType.DELETE)
	@PostMapping( "/del")
	@ResponseBody
	public Result del(String ids) {		
		return toAjax(msgService.deleteMsgByIds(ids));
	}

	/**
	 * 发布消息
	 */
	@RequiresPermissions("module:notice:edit")
	@Log(title = "消息", businessType = BusinessType.UPDATE)
	@PostMapping("/sendStatus")
	@ResponseBody
	public Result sendStatus(NoticeEntity msg) {
		msg.setStatus(Constants.MASSAGE_SENDED);
		return toAjax(msgService.updateMsg(msg));
	}

	/**
	 * app 查询最新公告
	 */
	@PostMapping("/appQueryNews")
	@ResponseBody
	public NoticeEntity appQueryNews(NoticeEntity msg) {
		PageHelper.startPage(1, 1, null);
		msg.setStatus(Constants.MASSAGE_SENDED);
		List<NoticeEntity> list = msgService.selectMsgList(msg);
		return list.size() > 0 ? list.get(0) : null;
	}
	
}
