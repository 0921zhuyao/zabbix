package com.jd.project.module.admin.evaluation.controller;

import java.util.List;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jd.framework.aspectj.lang.annotation.Log;
import com.jd.framework.aspectj.lang.enums.BusinessType;
import com.jd.framework.web.controller.BaseController;
import com.jd.framework.web.domain.Result;
import com.jd.framework.web.page.TableDataInfo;
import com.jd.project.module.admin.evaluation.entity.DynamicEntity;
import com.jd.project.module.admin.evaluation.service.DynamicService;

/**
 * 动态运行记录 信息操作处理
 * 
 * @author TrevorPhilips
 * @date 2018-11-29
 */
@Controller
@RequestMapping("/module/dynamic")
public class DynamicController extends BaseController {
	private String prefix = "module/dynamic";

	@Autowired
	private DynamicService dynamicService;

	@RequiresPermissions("module:dynamic:view")
	@GetMapping()
	public String initList() {
		return prefix + "/dynamic_list";
	}

	/**
	 * 查询动态运行记录列表
	 */
	@RequiresPermissions("module:dynamic:list")
	@PostMapping("/query")
	@ResponseBody
	public TableDataInfo query(DynamicEntity dynamic) {
		startPage();
		List<DynamicEntity> list = dynamicService.selectDynamicList(dynamic);
		return getDataTable(list);
	}

	/**
	 * 新增动态运行记录
	 */
	@GetMapping("/initAdd")
	public String initAdd(ModelMap mmap) {
		mmap.put("dynamic", new DynamicEntity());
		return prefix + "/dynamic_edit";
	}

	/**
	 * 新增保存动态运行记录
	 */
	@RequiresPermissions("module:dynamic:add")
	@Log(title = "动态运行记录", businessType = BusinessType.INSERT)
	@PostMapping("/add")
	@ResponseBody
	public Result add(DynamicEntity dynamic) {
		return toAjax(dynamicService.modifyDynamic(dynamic));
	}

	/**
	 * 修改动态运行记录
	 */
	@GetMapping("/initEdit/{dynamicsId}")
	public String initEdit(@PathVariable("dynamicsId") Long dynamicsId, ModelMap mmap) {
		DynamicEntity dynamic = dynamicService.selectDynamicById(dynamicsId);
		mmap.put("dynamic", dynamic);
		return prefix + "/dynamic_edit";
	}

	/**
	 * 修改保存动态运行记录
	 */
	@RequiresPermissions("module:dynamic:edit")
	@Log(title = "动态运行记录", businessType = BusinessType.UPDATE)
	@PostMapping("/edit")
	@ResponseBody
	public Result edit(DynamicEntity dynamic) {
		return toAjax(dynamicService.updateDynamic(dynamic));
	}

	/**
	 * 删除动态运行记录
	 */
	@RequiresPermissions("module:dynamic:remove")
	@Log(title = "动态运行记录", businessType = BusinessType.DELETE)
	@PostMapping("/del")
	@ResponseBody
	public Result del(String ids) {
		return toAjax(dynamicService.deleteDynamicByIds(ids));
	}

}
